package ThreadPack;

/**
 * @author Young
 * @create 2020-03-17 10:27
 * @desc 百万数据快速入库实战
 * 1.分析百万数据入库的特点
 *      数据量大（高并发）， 时间短（高性能）
 *      采取批量的方式入库，每次插入1-2w条数据，分多个批次，用并发编程的方式解决
 * 2.高并发：如何模拟生成百万数据且解决百万数据入库的问题
 *      采用多线程，线程池
 * 3.高性能：百万数据如何在段时间内入库？如何从架构角度优化？
 *
 * 4.高性能：如何解决应用程序性能瓶颈？
 *      采用并发编程
 * 5.高性能：如何解决数据处理（数据库连接池，MySQL数据库）性能瓶颈？
 *      调优
 *
 *  池技术：在开发过程中，经常会使用到池化技术，如线程池、连接池等，通过复用技术来减少
 *      一些消耗，以提升性能。
 *      连接池：tomcat连接池、数据库连接池等等，通过复用连接来减少创建和释放连接的时间
 *              来提升性能
 *      线程池：通过复用线程来提升性能
 *
 *  池技术为什么能提升性能？
 *
 *  Druid数据库连接池性能调优：
 *      配置连接池的参数
 *      initialSize=20
 *      maxActive=100
 *      maxWait=600000
 *      minIdle=5
 *
 *  MySQL核心参数优化：
 *      my.ini
 *      innodb thread concurrency=32   并发线程数，官方默认17
 *      innodb_buffer_pool_size=32M    默认8M
 *      join_buffer_size=256k
 *      max_allowed_packet=32M          允许网络传输包的大小，默认4M
 *  调整以上参数，通过提升并发量来提升性能
 * {@link}
 **/
public class Demo1 {
}
