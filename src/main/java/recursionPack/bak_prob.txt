JAVA经典算法40例
【程序1】   题目：古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第四个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？

【程序2】   题目：判断101-200之间有多少个素数，并输出所有素数。

【程序3】   题目：打印出所有的 "水仙花数 "，所谓 "水仙花数 "是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个 "水仙花数 "，因为153=1的三次方＋5的三次方＋3的三次方。

【程序4】   题目：将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。

【程序5】   题目：利用条件运算符的嵌套来完成此题：学习成绩> =90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。

【程序6】   题目：输入两个正整数m和n，求其最大公约数和最小公倍数。

【程序7】   题目：输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。

【程序8】   题目：求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加有键盘控制。

【程序9】   题目：一个数如果恰好等于它的因子之和，这个数就称为 "完数 "。例如6=1＋2＋3.编程   找出1000以内的所有完数。

【程序10】 题目：一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在   第10次落地时，共经过多少米？第10次反弹多高？

【程序11】   题目：有1、2、3、4个数字，能组成多少个互不相同且无重复数字的三位数？都是多少？

【程序12】  题目：企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？

【程序13】

【程序14】 题目：输入某年某月某日，判断这一天是这一年的第几天？

【程序15】 题目：输入三个整数x,y,z，请把这三个数由小到大输出。

【程序16】 题目：输出9*9口诀。

【程序17】   题目：猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个   第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下   的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。

【程序18】   题目：两个乒乓球队进行比赛，各出三人。甲队为a,b,c三人，乙队为x,y,z三人。已抽签决定比赛名单。有人向队员打听比赛的名单。a说他不和x比，c说他不和x,z比，请编程序找出三队赛手的名单。

【程序19】  题目：打印出如下图案（菱形）
*
***
******
********
******
***
*

【程序20】   题目：有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。

【程序21】   题目：求1+2!+3!+...+20!的和

【程序22】   题目：利用递归方法求5!。


【程序23】   题目：有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？

【程序24】   题目：给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。

【程序25】   题目：一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。

【程序26】   题目：请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续   判断第二个字母。


【程序27】   题目：求100之内的素数
public class Ex27 {
 public static void main(String args[])
 {
  int sum,i;
  for(sum=2;sum<=100;sum++)
  {
   for(i=2;i<=sum/2;i++)
   {
    if(sum%i==0)
     break;
   }
   if(i>sum/2)
    System.out.println(sum+"是素数");
  }
 }
}
【程序28】   题目：对10个数进行排序
1.程序分析：可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，   下次类推，即用第二个元素与后8个进行比较，并进行交换。
import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;
public class Ex28 {
 public static void main(String[] args) {
  int arr[] = new int[11];
  Random r=new Random();
  for(int i=0;i<10;i++){
   arr[i]=r.nextInt(100)+1;//得到10个100以内的整数
  }
  Arrays.sort(arr);
  for(int i=0;i<arr.length;i++){
   System.out.print(arr[i]+"\t");
  }
  System.out.print("\nPlease Input a int number: ");
  Scanner sc=new Scanner(System.in);
  arr[10]=sc.nextInt();//输入一个int值
  Arrays.sort(arr);
  for(int i=0;i<arr.length;i++){
   System.out.print(arr[i]+"\t");
  }
 }
}
【程序29】   题目：求一个3*3矩阵对角线元素之和
1.程序分析：利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。
public class Ex29 {
    public static void main(String[] args){
    double sum=0;
    int array[][]={{1,2,3},{4,5, 6},{7,7,8}};
    for(int i=0;i<3;i++)
       for(int j=0;j<3;j++){
          if(i==j)
            sum=sum + array[i][j];
       }
    System.out.println( sum);
    }
}
【程序30】   题目：有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。
1.   程序分析：首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。
import java.util.Random;
public class ArraySort {
  public static void main(String[] args)
  {  int temp=0;
      int myarr[] = new int[12];
      Random r=new Random();
      for(int i=1;i<=10;i++)
        myarr[i]=r.nextInt(1000);
      for (int k=1;k<=10;k++)
      System.out.print(myarr[k]+",");
      for(int i=1;i<=9;i++)
          for(int k=i+1;k<=10;k++)
              if(myarr[i]>myarr[k])
              {
                  temp=myarr[i];
                  myarr[i]=myarr[k];
                  myarr[k]=temp;
              }
      System.out.println("");
      for (int k=1;k<=10;k++)
          System.out.print(myarr[k]+",");

       myarr[11]=r.nextInt(1000);
       for(int k=1;k<=10;k++)
           if(myarr[k]>myarr[11])
           {
               temp=myarr[11];
               for(int j=11;j>=k+1;j--)
                   myarr[j]=myarr[j-1];
               myarr[k]=temp;
           }
         System.out.println("");
       for (int k=1;k<=11;k++)
              System.out.print(myarr[k]+",");
  }
}

【程序31】   题目：将一个数组逆序输出。
程序分析：用第一个与最后一个交换。
其实，用循环控制变量更简单：
       for(int k=11;k>=1;k--)
              System.out.print(myarr[k]+",");

【程序32】   题目：取一个整数a从右端开始的4～7位。
程序分析：可以这样考虑：
(1)先使a右移4位。
(2)设置一个低4位全为1,其余全为0的数。可用~(~0 < <4)
(3)将上面二者进行&运算。

public class Ex32 {
  public static void main(String[] args)
  {
    int a=0;
    long b=18745678;
    a=(int) Math.floor(b % Math.pow(10,7)/Math.pow(10, 3));
    System.out.println(a);
  }
  }
【程序33】
题目：打印出杨辉三角形（要求打印出10行如下图）
1.程序分析：
1
1   1
1   2   1
1   3   3   1
1   4   6   4   1
1   5   10   10   5   1
public class Ex33 {
    public static void main(String args[]){
           int i,j;
           int a[][];
           a=new int[8][8];
          for(i=0;i<8;i++){
             a[i][i]=1;
             a[i][0]=1;
            }
          for(i=2;i<8;i++){
           for(j=1;j<=i-1;j++){
          a[i][j]=a[i-1][j-1]+a[i-1][j];
           }
          }
          for(i=0;i<8;i++){
          for(j=0;j<i;j++){
           System.out.printf("  "+a[i][j]);
           }
          System.out.println();
          }
         }
}

【程序34】   题目：输入3个数a,b,c，按大小顺序输出。
1.程序分析：利用指针方法。
public class Ex34 {
    public static void main(String[] args)
    {
    int []arrays = {800,56,500};
    for(int i=arrays.length;--i>=0;)
    {
    for(int j=0;j<i;j++)
    {
    if(arrays[j]>arrays[j+1])
    {
    int temp=arrays[j];
    arrays[j]=arrays[j+1];
    arrays[j+1]=temp;
    }
    }
    }
    for(int n=0;n<arrays.length;n++)
    System.out.println(arrays[n]);
    }

}
【程序35】   题目：输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。
import java.util.*;
public class Ex35 {
public static void main(String[] args) {
int i, min, max, n, temp1, temp2;
int a[];
System.out.println("输入数组的长度:");
Scanner keyboard = new Scanner(System.in);
n = keyboard.nextInt();
a = new int[n];
for (i = 0; i < n; i++) {
System.out.print("输入第" + (i + 1) + "个数据");
a[i] = keyboard.nextInt();
}
//以上是输入整个数组
max = 0;
min = 0;
//设置两个标志,开始都指向第一个数
for (i = 1; i < n; i++) {
if (a[i] > a[max])
max = i; //遍历数组,如果大于a[max]，就把他的数组下标赋给max
if (a[i] < a[min])
min = i; //同上，如果小于a[min],就把他的数组下标赋给min
}
//以上for循环找到最大值和最小值，max是最大值的下标，min是最小值的下标
temp1 = a[0];
temp2 = a[min]; //这两个temp只是为了在交换时使用

a[0] = a[max];
a[max] = temp1; //首先交换a[0]和最大值a[max]

if (min != 0) { //如果最小值不是a[0]，执行下面
a[min] = a[n - 1];
a[n - 1] = temp2; //交换a[min]和a[n-1]
} else {       //如果最小值是a[0],执行下面
a[max] = a[n - 1];
a[n - 1] = temp1;
}

for (i = 0; i < n; i++) { //输出数组
System.out.print(a[i] + " ");
}
}
}
【程序36】   题目：有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数


【程序37】
题目：有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。
import java.util.Scanner;
public class Ex37 {
    public static void main(String[] args) {
           Scanner s = new Scanner(System.in);
           int n = s.nextInt();
           boolean[] arr = new boolean[n];
           for(int i=0; i<arr.length; i++) {
            arr[i] = true;//下标为TRUE时说明还在圈里
           }
           int leftCount = n;
           int countNum = 0;
           int index = 0;
           while(leftCount > 1) {
            if(arr[index] == true) {//当在圈里时
             countNum ++; //报数递加
             if(countNum == 3) {//报道3时
              countNum =0;//从零开始继续报数
              arr[index] = false;//此人退出圈子
              leftCount --;//剩余人数减一
             }
            }
            index ++;//每报一次数，下标加一
            if(index == n) {//是循环数数，当下标大于n时，说明已经数了一圈，
             index = 0;//将下标设为零重新开始。
            }
           }
           for(int i=0; i<n; i++) {
            if(arr[i] == true) {
             System.out.println(i);
            }
           }
     }
}

【程序38】
题目：写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。
import java.util.Scanner;
public class Ex38 {
public static void main(String [] args)
{
    Scanner s = new Scanner(System.in);
    System.out.println("请输入一个字符串");
    String mys= s.next();
    System.out.println(str_len(mys));
}
  public static int str_len(String x)
  {
      return x.length();
  }
}



题目：编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n

【程序39】
题目：字符串排序。

import java.util.*;
public class test{
    public   static   void   main(String[]   args)
    {
     ArrayList<String> list=new ArrayList<String>();
     list.add("010101");
     list.add("010003");
    list.add("010201");
    Collections.sort(list);
  for(int   i=0;i<list.size();i++){
  System.out.println(list.get(i));
  }
  }
  }

【程序40】
题目：海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子凭据分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？

public class Dg {
static int ts=0;//桃子总数
int fs=1;//记录分的次数
static int hs=5;//猴子数...
int tsscope=5000;//桃子数的取值范围.太大容易溢出.
public int fT(int t){
if(t==tsscope){
//当桃子数到了最大的取值范围时取消递归
System.out.println("结束");
return 0;
}
else{
if((t-1)%hs==0 && fs <=hs){
if(fs==hs)
{
System.out.println("桃子数 = "+ts +" 时满足分桃条件");
}
   fs+=1;
   return fT((t-1)/5*4);// 返回猴子拿走一份后的剩下的总数
}
else
{
//没满足条件
fs=1;//分的次数重置为1
return fT(ts+=1);//桃子数加+1
}
}
}
public static void main(String[] args) {
new Dg().fT(0);
}

}

【程序41】
java排序算法的比较


import java.util.*;
import java.io.*;
public class SortAlgorithm
{
static Random rand = new Random();
void bubbleSort(int[] numlist) // 冒泡排序算法
{
int temp;
for(int j=1;j<numlist.length;j++)
for(int i=0;i<numlist.length-j;i++)
if(numlist>numlist[i+1])
{
temp = numlist[i+1];
numlist[i+1] = numlist;
numlist = temp;
}
}
void selectionSort (int[] numlist) //选择排序算法
{
int temp;
for(int i=0;i<numlist.length-1;i++)
for(int j=i+1;j<numlist.length;j++)
if(numlist>numlist[j])
{
temp = numlist[j];
numlist[j] = numlist;
numlist = temp;
}
}
void insertSort (int[] numlist) //插入排序算法
{
int temp,in,out;
for(out=1;out<numlist.length;out++)
{
temp=numlist[out];
in=out;
while(in>0 && numlist[in-1]>=temp)
{
numlist[in]=numlist[in-1];
--in;
}
numlist[in]=temp;
}
}
void display (int[] num) // 打印出排序结果
{
for(int i = 0;i<num.length;i++)
System.out.print(num+" ");
System.out.println("");
}
static int pRand(int mod) // 生成随即数组
{
return Math.abs(rand.nextInt())%mod;
}
public static void main(String args[])throws IOException
{
SortAlgorithm sortAlgorithm = new SortAlgorithm();
int[] numList = new int[10];
for(int i = 0;i<numList.length;i++)
numList = pRand(100); //调用pRand方法，把随即生成的数据输入到
// 数组中
System.out.println("随即生成的数组是：");
// 打印出原数组，
for(int j =0;j<numList.length;j++)
System.out.print(numList[j]+" ");
System.out.println("");
long begin = System.currentTimeMillis(); //排序开始时间，调用系统的当前时间
sortAlgorithm.bubbleSort(numList); //执行冒泡排序
long end = System.currentTimeMillis(); //排序结束时间，调用系统当前时间
System.out.println("冒泡排序用时为：" + (end-begin)); //排序用时
System.out.println("排序后的数组为：");
sortAlgorithm.display(numList);
begin = System.currentTimeMillis();
sortAlgorithm.selectionSort(numList);
end = System.currentTimeMillis();
System.out.println("选择排序用时为：" +(end-begin));
System.out.println("排序后的数组为：");
sortAlgorithm.display(numList);
begin = System.currentTimeMillis();
sortAlgorithm.insertSort(numList);
end = System.currentTimeMillis();
System.out.println("插入排序用时为：" + (end-begin));
System.out.println("排序后的数组为：");
sortAlgorithm.display(numList);
}
}
【程序42】
题目如下：用1、2、2、3、4、5这六个数字，用java写一个main函数，打印出所有不同的排列，如：512234、412345等，要求："4"不能在第三位，"3"与"5"不能相连。
static int[] bits = new int[] { 1, 2, 3, 4, 5 };
/**
* @param args
*/
public static void main(String[] args) {
sort("", bits);
}
private static void sort(String prefix, int[] a) {
if (a.length == 1) {
System.out.println(prefix + a[0]);
}
for (int i = 0; i < a.length; i++) {
sort(prefix + a, copy(a, i));
}
}
private static int[] copy(int[] a,int index){
int[] b = new int[a.length-1];
System.arraycopy(a, 0, b, 0, index);
System.arraycopy(a, index+1, b, index, a.length-index-1);
return b;
}